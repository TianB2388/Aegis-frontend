// frontend/src/ClientPayment.tsx
import React, { useState } from "react";

export default function ClientPayment() {
  const [insuranceEnabled, setInsuranceEnabled] = useState(true);
  const amount = 5000;
  const insuranceFee = amount * 0.02;

  // Simulated risk level â€” you can replace this with a backend API call
  const riskScore = amount > 10000 ? "High" : "Low";

  return (
    <div
      className="payment-container"
      style={{
        maxWidth: 400,
        margin: "auto",
        padding: 20,
        fontFamily: "Arial, sans-serif",
        border: "1px solid #ccc",
        borderRadius: 10,
        marginTop: 40,
      }}
    >
      <h3 style={{ marginBottom: 20 }}>Secure Payment Insurance</h3>

      <p>
        <strong>Amount:</strong> R{amount.toFixed(2)}
      </p>

      <label style={{ display: "block", marginTop: 15 }}>
        <input
          type="checkbox"
          checked={insuranceEnabled}
          onChange={(e) => setInsuranceEnabled(e.target.checked)}
        />{" "}
        Add 2% insurance (R{insuranceFee.toFixed(2)})
      </label>

      {insuranceEnabled && (
        <p style={{ marginTop: 10, fontSize: 14, color: "#555" }}>
          If your money is lost due to fraud or scam, the payment will be insured and you will be reimbursed up to the insured amount.
        </p>
      )}

      <p style={{ marginTop: 20 }}>
        <strong>Risk Level:</strong>{" "}
        <span
          style={{
            color: riskScore === "High" ? "red" : "green",
            fontWeight: "bold",
          }}
        >
          {riskScore}
        </span>
      </p>

      <button
        style={{
          marginTop: 20,
          padding: "10px 20px",
          backgroundColor: "#007bff",
          color: "white",
          border: "none",
          borderRadius: 5,
          cursor: "pointer",
        }}
      >
        Proceed to Pay
      </button>
    </div>
  );
}
