import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Switch } from "@/components/ui/switch";
import { Input } from "@/components/ui/input";
import { useState } from "react";

export default function AegisClientPortal() {
  const [insuranceEnabled, setInsuranceEnabled] = useState(false);
  const [amount, setAmount] = useState("");
  const [loading, setLoading] = useState(false);
  const [result, setResult] = useState<{ status: string; message: string; fraud?: boolean } | null>(null);

  const parsedAmount = parseFloat(amount) || 0;
  const insuranceFee = parsedAmount * 0.02;

  const handleAmountChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const input = e.target.value.replace(/^0+(?!\.)/, "");
    setAmount(input);
  };

  // Simulate deviceId and payerId for the demo
  const deviceId = "demo-device-001";
  const payerId = "demo-payer-001";

  // (Optional) Get IP address using a public API - not always accurate, and can be removed for privacy
  async function getIp() {
    try {
      const res = await fetch("https://api.ipify.org?format=json");
      const data = await res.json();
      return data.ip || "unknown";
    } catch {
      return "unknown";
    }
  }

  const handlePayment = async () => {
    setLoading(true);
    setResult(null);

    const ip = await getIp();

    const tx = {
      amount: parsedAmount,
      ip,
      deviceId,
      payerId,
      // add other fields as needed
    };

    try {
      const res = await fetch("http://localhost:5000/api/transactions", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(tx),
      });
      const data = await res.json();
      setResult(data);
    } catch (error) {
      setResult({ status: "error", message: "Failed to process transaction." });
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="p-6 max-w-md mx-auto space-y-4">
      <Card>
        <CardContent className="space-y-4">
          <h2 className="text-lg font-semibold">Aegis Payment Insurance</h2>

          <div>
            <label className="block text-sm mb-1">Enter Payment Amount</label>
            <Input
              type="number"
              placeholder="e.g. 2500"
              value={amount}
              onChange={handleAmountChange}
              className="w-full"
              min="0"
            />
          </div>

          <div className="flex items-center justify-between">
            <span className="text-sm">Add 2% Aegis Insurance</span>
            <Switch
              checked={insuranceEnabled}
              onCheckedChange={setInsuranceEnabled}
            />
          </div>

          {insuranceEnabled && (
            <div className="text-xs text-muted-foreground">
              Insurance Fee: <strong>R{insuranceFee.toFixed(2)}</strong>
            </div>
          )}

          <Button
            disabled={!parsedAmount || loading}
            onClick={handlePayment}
          >
            {loading ? "Processing..." : "Proceed to Payment"}
          </Button>

          {result && (
            <div className={`text-sm mt-2 ${result.status === "success" ? "text-green-600" : "text-red-600"}`}>
              {result.message}
              {result.fraud && (
                <div className="text-xs text-orange-600">⚠️ Fraud suspected for this transaction!</div>
              )}
            </div>
          )}
        </CardContent>
      </Card>
    </div>
  );
}
